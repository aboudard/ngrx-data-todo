{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/actions/counter.actions.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/reducers/counter.reducer.ts","./src/app/reducers/index.ts","./src/app/selectors/counter.selectors.ts","./src/app/services/todos.service.ts","./src/app/store/app-store.module.ts","./src/app/store/entity-metadata.ts","./src/app/store/entity-store.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { createAction } from '@ngrx/store';\n\nexport const increment = createAction('[Counter Component] Increment');\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { increment } from './actions/counter.actions';\nimport { Todo } from './dto/todo';\nimport { AppState } from './reducers/index';\nimport { selectCount } from './selectors/counter.selectors';\nimport { TodosService } from './services/todos.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'ngRx1';\n  count$: Observable<number>;\n  loading$: Observable<boolean>;\n  todos$: Observable<Todo[]>;\n\n  constructor(\n    private store: Store<AppState>,\n    private todosService: TodosService\n  ) {\n    this.todos$ = todosService.entities$;\n    this.loading$ = todosService.loading$;\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(increment());\n    this.count$ = this.store.pipe(\n      select(selectCount)\n    );\n    this.todosService.getAll();\n    // this.todosService.add({active: true, description: \"added one\", title: \"added one\"});\n  }\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!\n  </h1>\n  <h2>Counter value from Store : </h2>\n  <p>{{count$ | async}}</p>\n</div>\n<h2>Here are some links to help you start: </h2>\n<ul>\n  <li *ngFor=\"let todo of (todos$ | async); let i = index\">\n    <span [innerText]=\"todo.title\"></span>\n  </li>\n</ul>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppStoreModule } from './store/app-store.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AppStoreModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Action, createReducer, on } from '@ngrx/store';\nimport * as CounterActions from '../actions/counter.actions';\n\nexport interface CounterState {\n  count: number;\n}\n\nexport const initialState: CounterState = {\n  count: 0\n};\n\nconst counterReducer = createReducer(\n  initialState,\n  on(CounterActions.increment, state => ({ ...state, count: state.count + 2 }))\n);\n\nexport function reducer(state: CounterState | undefined, action: Action) {\n  return counterReducer(state, action);\n}\n","import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport * as fromCounter from './counter.reducer';\n\nexport interface AppState {\n  counter: fromCounter.CounterState;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n\n  counter: fromCounter.reducer,\n};\n\n\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production ? [] : [];\n","import { AppState } from './../reducers/index';\nimport { createSelector } from '@ngrx/store';\nimport * as fromCounter from '../reducers/counter.reducer';\n\nexport const selectState = (state: AppState) => state.counter;\n\nexport const selectCount = createSelector(\n  selectState,\n  (state: fromCounter.CounterState) => state.count\n);\n","import { Todo } from './../dto/todo';\nimport { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory\n} from '@ngrx/data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodosService extends EntityCollectionServiceBase<Todo> {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('Todo', serviceElementsFactory);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EntityStoreModule } from './entity-store.module';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from '../reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { environment } from 'src/environments/environment';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    StoreModule.forRoot(reducers, { metaReducers }),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EntityStoreModule\n  ]\n})\nexport class AppStoreModule { }\n","import { EntityMetadataMap } from '@ngrx/data';\n\nconst entityMetadata: EntityMetadataMap = {\n  Todo: {}\n};\n\nexport const entityConfig = {\n  entityMetadata\n};\n","import { NgModule } from '@angular/core';\nimport { EntityDataModule } from '@ngrx/data';\nimport { entityConfig } from './entity-metadata';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    EntityDataModule.forRoot(entityConfig),\n  ]\n})\nexport class EntityStoreModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}
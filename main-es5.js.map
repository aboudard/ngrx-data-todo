{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","increment","routes","AppRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_1__","relativeLinkResolution","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_3__","AppComponent","store","todosService","todos$","entities$","loading$","dispatch","count$","pipe","_selectors_counter_selectors__WEBPACK_IMPORTED_MODULE_1__","getAll","selectors","decls","vars","consts","template","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__","_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_common_http__WEBPACK_IMPORTED_MODULE_5__","_store_app_store_module__WEBPACK_IMPORTED_MODULE_2__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_6__","declarations","initialState","count","counterReducer","_actions_counter_actions__WEBPACK_IMPORTED_MODULE_0__","Object","state","reducer","action","reducers","counter","_counter_reducer__WEBPACK_IMPORTED_MODULE_1__","metaReducers","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","selectState","selectCount","TodosService","serviceElementsFactory","_ngrx_data__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory","providedIn","AppStoreModule","_ngrx_store__WEBPACK_IMPORTED_MODULE_4__","_reducers__WEBPACK_IMPORTED_MODULE_1__","_ngrx_effects__WEBPACK_IMPORTED_MODULE_5__","src_environments_environment__WEBPACK_IMPORTED_MODULE_2__","_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_6__","_entity_store_module__WEBPACK_IMPORTED_MODULE_0__","entityMetadata","Todo","entityConfig","EntityStoreModule","_ngrx_data__WEBPACK_IMPORTED_MODULE_2__","_entity_metadata__WEBPACK_IMPORTED_MODULE_0__","environment","production","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","console","error","err"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/actions/counter.actions.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/reducers/counter.reducer.ts","webpack:///src/app/reducers/index.ts","webpack:///src/app/selectors/counter.selectors.ts","webpack:///src/app/services/todos.service.ts","webpack:///src/app/store/app-store.module.ts","webpack:///src/app/store/entity-metadata.ts","webpack:///src/app/store/entity-store.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { createAction } from '@ngrx/store';\n\nexport const increment = createAction('[Counter Component] Increment');\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!\n  </h1>\n  <h2>Counter value from Store : </h2>\n  <p>{{count$ | async}}</p>\n</div>\n<h2>Here are some links to help you start: </h2>\n<ul>\n  <li *ngFor=\"let todo of (todos$ | async); let i = index\">\n    <span [innerText]=\"todo.title\"></span>\n  </li>\n</ul>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { increment } from './actions/counter.actions';\nimport { Todo } from './dto/todo';\nimport { AppState } from './reducers/index';\nimport { selectCount } from './selectors/counter.selectors';\nimport { TodosService } from './services/todos.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'ngRx1';\n  count$: Observable<number>;\n  loading$: Observable<boolean>;\n  todos$: Observable<Todo[]>;\n\n  constructor(\n    private store: Store<AppState>,\n    private todosService: TodosService\n  ) {\n    this.todos$ = todosService.entities$;\n    this.loading$ = todosService.loading$;\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(increment());\n    this.count$ = this.store.pipe(\n      select(selectCount)\n    );\n    this.todosService.getAll();\n    // this.todosService.add({active: true, description: \"added one\", title: \"added one\"});\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppStoreModule } from './store/app-store.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AppStoreModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Action, createReducer, on } from '@ngrx/store';\nimport * as CounterActions from '../actions/counter.actions';\n\nexport interface CounterState {\n  count: number;\n}\n\nexport const initialState: CounterState = {\n  count: 0\n};\n\nconst counterReducer = createReducer(\n  initialState,\n  on(CounterActions.increment, state => ({ ...state, count: state.count + 2 }))\n);\n\nexport function reducer(state: CounterState | undefined, action: Action) {\n  return counterReducer(state, action);\n}\n","import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport * as fromCounter from './counter.reducer';\n\nexport interface AppState {\n  counter: fromCounter.CounterState;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n\n  counter: fromCounter.reducer,\n};\n\n\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production ? [] : [];\n","import { AppState } from './../reducers/index';\nimport { createSelector } from '@ngrx/store';\nimport * as fromCounter from '../reducers/counter.reducer';\n\nexport const selectState = (state: AppState) => state.counter;\n\nexport const selectCount = createSelector(\n  selectState,\n  (state: fromCounter.CounterState) => state.count\n);\n","import { Todo } from './../dto/todo';\nimport { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory\n} from '@ngrx/data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodosService extends EntityCollectionServiceBase<Todo> {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('Todo', serviceElementsFactory);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EntityStoreModule } from './entity-store.module';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from '../reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { environment } from 'src/environments/environment';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    StoreModule.forRoot(reducers, { metaReducers }),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EntityStoreModule\n  ]\n})\nexport class AppStoreModule { }\n","import { EntityMetadataMap } from '@ngrx/data';\n\nconst entityMetadata: EntityMetadataMap = {\n  Todo: {}\n};\n\nexport const entityConfig = {\n  entityMetadata\n};\n","import { NgModule } from '@angular/core';\nimport { EntityDataModule } from '@ngrx/data';\nimport { entityConfig } from './entity-metadata';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    EntityDataModule.forRoot(entityConfig),\n  ]\n})\nexport class EntityStoreModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}